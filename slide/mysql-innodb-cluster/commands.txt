sudo -i mysqlsh

dba.deploySandboxInstance(3310)
dba.deploySandboxInstance(3320)
dba.deploySandboxInstance(3330)

# 起動、停止
dba.startSandboxInstance(3310)
dba.stopSandboxInstance(3310)

Object.keys(dba)



mysql -u root -p -h 127.0.0.1 -P3310 --prompt="mysql-\p> "
mysql -u root -p -h 127.0.0.1 -P3320 --prompt="mysql-\p> "
mysql -u root -p -h 127.0.0.1 -P3330 --prompt="mysql-\p> "


# group replication 関連のパラメータ
# createCluster の前後で値が異なる。
show variables like '%group%'

# master
shell.connect('root@127.0.0.1:3310')

cluster = dba.createCluster('mycluster') 
cluster.addInstance('root@localhost:3320')
cluster.addInstance('root@localhost:3330')

cluster.describe()
cluster.status()


\connect root@127.0.0.1:3310
cluster = dba.getCluster()

cluster.rejoinInstance('root@localhost:3310')
cluster.rejoinInstance('root@localhost:3320')
cluster.rejoinInstance('root@localhost:3330')

# root で /workつくる
cd /
mkdir work
chmod 775 work
chown root.mysql work

# set up router
cd work
mysqlrouter --bootstrap localhost:3310 --user=mysql --directory myrouter
mysqlrouter --bootstrap localhost:3310 --user=mysql --directory myrouter --force


# connet router
mysql -u root -p -h 127.0.0.1 -P6446 --prompt="mysql-\p> "
mysql -u root -p -h 127.0.0.1 -P6447 --prompt="mysql-\p> "

show variables like 'port'

dba.stopSandboxInstance(3310)
dba.stopSandboxInstance(3320)
dba.stopSandboxInstance(3330)

dba.startSandboxInstance(3310)
dba.startSandboxInstance(3320)
dba.startSandboxInstance(3330)


# sql
create database tech_db;
create table member (
  `id` int auto_increment,
  `name` varchar(64) default null,
  `score` float default 0
);
